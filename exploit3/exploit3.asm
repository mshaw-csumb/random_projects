BITS 32
section .text

extern gets
extern printf


global main

;copy the structure of exploit3.c
;void spawnshell()
;void vulnerable() where a local variable is used for name

main:


	call vulnerable
	
	mov eax, 1
	mov ebx, 0
	int 0x80



vulnerable:

	push ebp
	mov ebp, esp
	sub esp, 16 ;16 bytes for the char array name 
	;ebp-16 will be the stack address for the local variable name
	
	push prompt1 ;second arg, "give me your name and I might give you the flag
	push fmt ;first arg

	call printf
	add esp, 8 ;cleanup the stack

	;gets() the name
	mov eax, ebp
	sub eax, 16 ;eax = ebp, ebp-16 is my local variable name
	push eax ;first argument, name local variable.
	call gets
	add esp, 4 ; reset stac, for one argument	

	push prompt2
	push fmt
	call printf
	add esp, 8 

	mov eax, ebp
	sub eax, 16
	push eax ;the address of 'name'
	push fmt
	call printf
	add esp, 8
	
	
	
	mov esp, ebp
	pop ebp
	ret
	
	
section .data

	prompt1 db "Tell me your name, and I might give you the flag: ",0
	prompt2 db "you said: ",0
	fmt	db "%s",10,0
